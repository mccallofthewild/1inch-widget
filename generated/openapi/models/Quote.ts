/* tslint:disable */
/* eslint-disable */
/**
 * 1inch API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    SelectedProtocol,
    SelectedProtocolFromJSON,
    SelectedProtocolFromJSONTyped,
    SelectedProtocolToJSON,
    Token,
    TokenFromJSON,
    TokenFromJSONTyped,
    TokenToJSON,
} from './';

/**
 * Quote Response
 * @export
 * @interface Quote
 */
export interface Quote {
    /**
     * 
     * @type {Token}
     * @memberof Quote
     */
    fromToken: Token;
    /**
     * 
     * @type {Token}
     * @memberof Quote
     */
    toToken: Token;
    /**
     * To token amount
     * @type {string}
     * @memberof Quote
     */
    toTokenAmount: string;
    /**
     * From token amount
     * @type {string}
     * @memberof Quote
     */
    fromTokenAmount: string;
    /**
     * From token amount
     * @type {Array<SelectedProtocol>}
     * @memberof Quote
     */
    protocols: Array<SelectedProtocol>;
    /**
     * Estimated Gas
     * @type {number}
     * @memberof Quote
     */
    estimatedGas: number;
}

export function QuoteFromJSON(json: any): Quote {
    return QuoteFromJSONTyped(json, false);
}

export function QuoteFromJSONTyped(json: any, ignoreDiscriminator: boolean): Quote {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fromToken': TokenFromJSON(json['fromToken']),
        'toToken': TokenFromJSON(json['toToken']),
        'toTokenAmount': json['toTokenAmount'],
        'fromTokenAmount': json['fromTokenAmount'],
        'protocols': ((json['protocols'] as Array<any>).map(SelectedProtocolFromJSON)),
        'estimatedGas': json['estimatedGas'],
    };
}

export function QuoteToJSON(value?: Quote | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'fromToken': TokenToJSON(value.fromToken),
        'toToken': TokenToJSON(value.toToken),
        'toTokenAmount': value.toTokenAmount,
        'fromTokenAmount': value.fromTokenAmount,
        'protocols': ((value.protocols as Array<any>).map(SelectedProtocolToJSON)),
        'estimatedGas': value.estimatedGas,
    };
}


